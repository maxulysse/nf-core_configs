//Profile config names for nf-core/configs
params {
    config_profile_description = 'University of Texas at Dallas HPC cluster profile provided by nf-core/configs'
    config_profile_contact = 'Edmund Miller'
    config_profile_contact_github = '@edmundmiller'
    config_profile_contact_email = 'edmund.miller@utdallas.edu'
    config_profile_url = 'https://docs.circ.utdallas.edu/user-guide/systems/ganymede.html'
}

env {
    TMPDIR = "/home/$USER/scratch/tmp"
    SINGULARITY_CACHEDIR="/home/$USER/scratch/singularity"
}

singularity {
    enabled = true
    envWhitelist='SINGULARITY_BINDPATH,LD_LIBRARY_PATH'
    autoMounts = true
    cacheDir = "/home/$USER/scratch/singularity"
}

def membership = "groups".execute().text

def select_queue = { memory, cpu ->
    if (memory <= 30.GB && cpu <= 16 && membership.contains('genomics')) {
        return 'genomics,normal'
    }
    if (memory > 30.GB && memory <= 125.GB && cpu <= 12 && membership.contains('kim')) {
        return 'Kim,128s'
    }
    if (memory > 30.GB && memory <= 125.GB && cpu <= 16) {
        return '128s'
    }
    if (memory <= 250.GB && cpu <= 28) {
        return '256i,256h'
    }
}

// Submit up to 100 concurrent jobs
// pollInterval and queueStatInterval of every 5 minutes
// submitRateLimit of 20 per minute
executor {
    queueSize = 100
    pollInterval = '5 min'
    queueStatInterval = '5 min'
    submitRateLimit = '20 min'
    jobName = { "${task.process.split(':').last()}" }
}

process {
    beforeScript = 'module load singularity/3.2.1'
    executor = 'slurm'
    queue = { select_queue(task.memory, task.cpu) }

    withLabel:process_medium {
        cpus   = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 30.GB * task.attempt, 'memory' ) }
    }
}

params {
    max_memory = 250.GB
    max_cpus = 28
    max_time = 96.h
}
